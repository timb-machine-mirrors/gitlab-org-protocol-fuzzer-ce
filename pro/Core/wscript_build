#!/usr/bin/env python

deps = [
	'System.Runtime.Remoting.dll',
	'System.Runtime.Serialization.dll',
	'System.dll',
	'System.Management.dll',
	'System.Xml.dll',
	'System.Core.dll',
	'System.Data.dll',
	'System.Data.DataSetExtensions.dll',
	'System.Data.SQLite.dll',
	'System.Drawing.dll',
	'System.Numerics.dll',
	'System.Web.dll',
	'System.Web.Services.dll',
	'System.Configuration.dll',
	'System.ServiceProcess.dll',

	'Portable.Licensing.dll',
	'SocketHttpListener.dll',

	'NLog.dll',
	'SharpPcap.dll',
	'PacketDotNet.dll',
	'Ionic.Zip.dll',

	'IronPython.dll',
	'IronRuby.dll',
	'IronRuby.Libraries.dll',
	'IronRuby.Libraries.Yaml.dll',

	'Microsoft.Dynamic.dll',
	'Microsoft.CSharp.dll',
	'Microsoft.Scripting.dll',
	'Microsoft.Scripting.Metadata.dll',
	
	'Renci.SshNet.dll',
	'Newtonsoft.Json.dll',

	'Peach.Core.dll',

	'Managed.Adb.dll',
	'BouncyCastle.Crypto.dll',
	'aardvark_net.dll',
	'komodo_net.dll',
	'LibUsbDotNet.dll',
	'Mono.Posix.dll',

	'websocket-sharp.dll',
	'Dapper.dll',
	'Aspose.Words.dll',

	'vtortola.WebSockets.dll',
	'vtortola.WebSockets.Rfc6455.dll',
	'System.Threading.Tasks.Dataflow.dll',
	'Facades/System.Runtime.dll',
	'Facades/System.Threading.Tasks.dll',

	'SharpSnmpLib.Full.dll',
	'SharpSnmpLib.Portable.dll',

	'Microsoft.Diagnostics.Runtime.dll',
	'Patterns.Logging.dll',
]

if bld.env.TARGET in ['win']:
	embed = 'Vix.dll'
else:
	embed = ''

asm = bld(
	features = 'cs',
	unsafe = True,
	use = deps,
	source = bld.path.ant_glob('**/*.cs'),
	resource = bld.path.ant_glob('Resources/**/* WebServices/Views/**/*'),
	embed = embed,
	ide_content = 'WebServices/Models/Model.cd',
	name = 'Peach.Pro.dll',
	namespace = 'Peach.Pro.Core',
	install_755 = {},
)

if 'win' in bld.env['supported_features']:
	deps.extend([
		'UIAutomationClient.dll',
		'UIAutomationTypes.dll',
	])
	root = bld.path.find_or_declare('OS/Windows')
	asm.install_755[root] = root.ant_glob('Debuggers/DebugEngine/*.dll')

if 'linux' in bld.env['supported_features']:
	root = bld.path.find_or_declare('OS/Linux')
	asm.install_755[root] = root.ant_glob('gdb/**/*')

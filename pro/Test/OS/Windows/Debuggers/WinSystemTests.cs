
//
// Copyright (c) Michael Eddington
//
// Permission is hereby granted, free of charge, to any person obtaining a copy 
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights 
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
// copies of the Software, and to permit persons to whom the Software is 
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in	
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

// Authors:
//   Michael Eddington (mike@dejavusecurity.com)

// $Id$

using System;
using System.ServiceProcess;
using NUnit.Framework;
using Peach.Core;
using Peach.Pro.OS.Windows;
using Peach.Pro.OS.Windows.Agent.Monitors.WindowsDebug;
using Peach.Pro.OS.Windows.Debuggers.WindowsSystem;
using Peach.Core.Test;
using Peach.Pro.OS.Windows.Agent.Monitors;

namespace Peach.Pro.Test.OS.Windows.Debuggers
{
	[TestFixture]
	[Quick]
	[Peach]
	[Platform("Win")]
	class WinSystemTests
	{
		string caughtException;
		bool firstChance;
		private static readonly string Program = Utilities.GetAppResourcePath("CrashingProgram.exe");

		[SetUp]
		public void SetUp()
		{
			firstChance = true;
			caughtException = null;
		}

		[Test]
		public void NonCrashTest()
		{
			System.Environment.SetEnvironmentVariable("PEACH", "AAAA");
			var dbg = SystemDebugger.CreateProcess(Program);
			dbg.HandleAccessViolation = HandleAccessViolation;
			dbg.MainLoop();

			Assert.IsNull(caughtException);
		}

		[Test]
		public void CrashTestFirstChance()
		{
			CrashTest(true, "");
			Assert.AreEqual("FirstChance", caughtException);
		}

		[Test]
		public void CrashTestSecondChance()
		{
			CrashTest(false, "");
			Assert.AreEqual("SecondChance", caughtException);
		}

		[Test]
		public void CrashChild()
		{
			CrashTest(true, " arg1 arg2");
			Assert.AreEqual("FirstChance", caughtException);
		}

		void CrashTest(bool firstChance, string arg)
		{
			this.firstChance = firstChance;

			System.Environment.SetEnvironmentVariable
			var dbg = SystemDebugger.CreateProcess(Program + arg);
			dbg.HandleAccessViolation = HandleAccessViolation;
			dbg.MainLoop();
		}

		public bool HandleAccessViolation(ExceptionEvent evt)
		{
			if (evt.FirstChance != 0)
			{
				if (!firstChance)
					return true;

				caughtException = "FirstChance";
			}
			else
			{
				caughtException = "SecondChance";
			}

			return false;
		}

		[Test]
		public void ServiceTest()
		{
			if (!Privilege.IsUserAdministrator())
				Assert.Ignore("User is not an administrator.");

			if (!Environment.Is64BitProcess && Environment.Is64BitOperatingSystem)
				Assert.Ignore("Cannot run the 32bit version of this test on a 64bit operating system.");

			if (Environment.Is64BitProcess && !Environment.Is64BitOperatingSystem)
				Assert.Ignore("Cannot run the 64bit version of this test on a 32bit operating system.");

			try
			{
				using (var si = SingleInstance.CreateInstance("Peach.Core.Test.OS.Windows.WinSystemTests"))
				{
					si.Lock();

					var dbg = new SystemDebuggerInstance();

					dbg.StartService("iphlpsvc", TimeSpan.FromSeconds(30));

					for (int i = 0; i < 10; ++i)
					{
						Assert.True(dbg.IsRunning);
						System.Threading.Thread.Sleep(100);
					}

					dbg.Stop();

					Assert.Null(dbg.Fault);
				}
			}
			finally
			{
				using (ServiceController srv = new ServiceController("iphlpsvc"))
				{
					if (srv.Status == ServiceControllerStatus.Stopped)
					{
						srv.Start();
					}
				}
			}
		}

		[Test]
		public void BadProcess()
		{
			var dbg = new SystemDebuggerInstance();

			var ex = Assert.Throws<PeachException>(() => dbg.StartProcess("foo.exe"));

			StringAssert.StartsWith("System debugger could not start process 'foo.exe'.", ex.Message);
		}


		[Test]
		public void TestWinDbg()
		{
			SetUpFixture.EnableDebug();


			Environment.SetEnvironmentVariable

			var dbg = new WindowsDebuggerInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = "SRV*http://msdl.microsoft.com/download/symbols"
			};

			dbg.StartProcess(Program);

			for (int i = 0; i < 10; ++i)
			{
				if (!dbg.IsRunning)
					break;
				System.Threading.Thread.Sleep(100);
			}

			Assert.False(dbg.IsRunning, "Debugger should not be running");
			Assert.NotNull(dbg.Fault, "Debugger should have detected fault");

			dbg.Stop();
		}

		[Test]
		public void TestWinDbgBadProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new WindowsDebuggerInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = "SRV*http://msdl.microsoft.com/download/symbols"
			};

			var ex = Assert.Throws<PeachException>(() => dbg.StartProcess("Foo.exe"));

			StringAssert.Contains("The system cannot find the file specified.", ex.Message);
		}

		[Test]
		public void TestAttachBadProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new WindowsDebuggerInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = "SRV*http://msdl.microsoft.com/download/symbols"
			};

			var ex = Assert.Throws<PeachException>(() => dbg.AttachProcess("1234"));

			StringAssert.Contains("Value does not fall within the expected range.", ex.Message);
		}

		[Test]
		public void TestAttachProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new WindowsDebuggerInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = "SRV*http://msdl.microsoft.com/download/symbols"
			};

			var exe = Utilities.GetAppResourcePath("CrashableServer.exe");
			using (var p = ProcessHelper.Start(exe, "127.0.0.1 0", null, null))
			{
				dbg.AttachProcess(p.Id.ToString());

				System.Threading.Thread.Sleep(1000);

				Assert.True(dbg.IsRunning, "Debugger should be running");

				dbg.Stop();

				Assert.Null(dbg.Fault, "Should not have detected fault");
			}
		}


		[Test]
		public void TestWinDbgStop()
		{
			SetUpFixture.EnableDebug();

			var dbg = new WindowsDebuggerInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = "SRV*http://msdl.microsoft.com/download/symbols"
			};

			var exe = Utilities.GetAppResourcePath("CrashableServer.exe");
			dbg.StartProcess(exe + " 127.0.0.1 0");

			System.Threading.Thread.Sleep(1000);

			Assert.True(dbg.IsRunning, "Debugger should be running");

			dbg.Stop();

			Assert.Null(dbg.Fault, "Should not have detected fault");

		}
	}
}

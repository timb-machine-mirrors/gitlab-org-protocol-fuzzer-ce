<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://peachfuzzer.com/2012/Peach /peach/peach.xsd"
       author="Deja Vu Security, LLC" description="LDAPv3 Pit StateModels" version="0.0.2">
	<!-- Copyright (c) Deja Vu Security, LLC 2013 -->

	<Include ns="DataModels" src="file:##Path##/_Common/Models/Net/Ldap_Data.xml"/>

	<StateModel name="Search" initialState="Initial">
		<State name="Initial">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Bind" />
       </Action>
			<Action type="changeState" ref="ldap" />
		</State>
		<State name="ldap">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Search" />
			</Action>
			<Action type="changeState" ref="ubind" />
		</State>
		<State name="ubind">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Unbind" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="Add" initialState="Initial">
		<State name="Initial">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Bind" />
      </Action>
			<Action type="changeState" ref="ldap" />
		</State>
		<State name="ldap">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Add" />
			</Action>
			<Action type="changeState" ref="ubind" />
		</State>
		<State name="ubind">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Unbind" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="Compare" initialState="Initial">
		<State name="Initial">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Bind" />
      </Action>
			<Action type="changeState" ref="ldap" />
		</State>
		<State name="ldap">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Compare" />
			</Action>
			<Action type="changeState" ref="ubind" />
		</State>
		<State name="ubind">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Unbind" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="Delete" initialState="Initial">
		<State name="Initial">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Bind" />
            </Action>
			<Action type="changeState" ref="ldap" />
		</State>
		<State name="ldap">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Delete" />
			</Action>
			<Action type="changeState" ref="ubind" />
		</State>
		<State name="ubind">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Unbind" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="ExtendOp" initialState="Initial">
		<State name="Initial">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Bind" />
            </Action>
			<Action type="changeState" ref="ldap" />
		</State>
		<State name="ldap">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:ExtendOp" />
			</Action>
			<Action type="changeState" ref="ubind" />
		</State>
		<State name="ubind">
			<Action type="output" publisher="tcp">
				<DataModel ref="DataModels:Unbind" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="Server" initialState="ProcessRequest">
    <State name="ProcessRequest">
      <Action type="start" publisher="TcpHandler"/>

      <Action type="call" method="launchProgram" publisher="Peach.Agent"/>

      <Action type="accept" publisher="TcpHandler"/>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
    </State>

		<State name="NextTransaction">
			<Action name="ReceiveClientRequest2" type="input" publisher="TcpHandler">
        <DataModel name="Request" ref="DataModels:Input"/>
      </Action>

			<!--Ends Iteration-->
			<Action name="Done" type="changeState" ref="Done" when="StateModel.states['NextTransaction'].actions[0].dataModel.find('EmptyPacket') != None"/>

      <Action name="MessageIdSlurp2" type="slurp" valueXpath="//ReceiveClientRequest2//MessageId" setXpath="//MessageId"/>

			<Action name="Unbind" type="changeState" ref="Done" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x42"/>

			<Action name="Bind" type="changeState" ref="BindResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x60"/>

			<Action name="Search" type="changeState" ref="SearchResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x63"/>

			<Action name="Add" type="changeState" ref="AddResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x68"/>

			<Action name="Compare" type="changeState" ref="CompareResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x6E"/>

			<Action name="Delete" type="changeState" ref="DeleteResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x4A"/>

			<!--TODO-->
			<Action name="ExtendOp" type="changeState" ref="SearchResponse" when="int(StateModel.states['NextTransaction'].actions[0].dataModel.find('Code').InternalValue) == 0x80"/>
		</State>

		<State name="Done"/>

		<State name="AddResponse">
			<Action name="SendAddResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse" />
				<Data>
					<Field name="Result.Code" valueType="hex" value="69"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="00"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>

		<State name="CompareResponse">
			<Action name="SendAddResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse" />
				<Data>
					<Field name="Result.Code" valueType="hex" value="6f"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="32"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>

		<State name="DeleteResponse">
			<Action name="SendDeleteResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse" />
				<Data>
					<Field name="Result.Code" valueType="hex" value="6b"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="00"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>

		<!--Avoids sending same response over and over-->
		<State name="NextTransaction2">
			<Action name="ReceiveClientRequest3" type="input" publisher="TcpHandler">
        <DataModel name="Request" ref="DataModels:Input"/>
      </Action>

			<!--Ends Iteration-->
			<Action name="Done" type="changeState" ref="Done" when="StateModel.states['NextTransaction2'].actions[0].dataModel.find('EmptyPacket') != None"/>

      <Action name="MessageIdSlurp2" type="slurp" valueXpath="//ReceiveClientRequest3//MessageId" setXpath="//MessageId"/>

			<Action name="Unbind" type="changeState" ref="Done" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x42"/>

			<Action name="Bind" type="changeState" ref="BindResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x60"/>

			<Action name="Search" type="changeState" ref="SearchResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x63"/>

			<Action name="Add" type="changeState" ref="AddResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x68"/>

			<Action name="Compare" type="changeState" ref="CompareResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x6E"/>

			<Action name="Delete" type="changeState" ref="DeleteResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x4A"/>

			<!--TODO-->
			<Action name="ExtendOp" type="changeState" ref="SearchResponse" when="int(StateModel.states['NextTransaction2'].actions[0].dataModel.find('Code').InternalValue) == 0x80"/>
		</State>

		<State name="BindResponse">
			<Action name="SendBindResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse" />
				<Data>
					<Field name="Result.Code" valueType="hex" value="61"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="00"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>

		<State name="SearchResponse">
			<Action name="SendSearchResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:SearchResponse2"/>
      </Action>

			<Action name="SendSearchResponse2" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse" />
				<Data>
					<Field name="Result.Code" valueType="hex" value="65"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="00"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>

		<State name="SearchResponse2">
			<Action name="SendSearchResponse" type="output" publisher="TcpHandler">
        <DataModel ref="DataModels:ServerResponse"/>
				<Data>
					<Field name="Result.Code" valueType="hex" value="65"/>
					<Field name="Result.ResultCode.Value" valueType="hex" value="20"/>
				</Data>
      </Action>

			<Action name="Next" type="changeState" ref="NextTransaction"/>
		</State>
  </StateModel>
</Peach>
<!--END-->
<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://peachfuzzer.com/2012/Peach ../peach.xsd"
			 author="Deja Vu Security, LLC" description="File Transfer Protocol PIT StateModels" version="0.0.2">
	<!-- Copyright (c) Deja Vu Security, LLC 2013 -->

	<Include ns="FTP" src="file:##Path##/_Common/Models/Net/ftp_Data.xml"/>
	<PythonPath path="##Path##/_Common/Models/Net/"/>
	<Import import="FTP"/>

	<!-- FTP simple state model -->
	<StateModel name="AgentToHost" initialState="InputUserName">
		<State name="InputUserName">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:ServerReadyForUser" />
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:USER" />
			</Action>
			<Action type="changeState" ref="InputPasswd"/>
		</State>

		<State name="InputPasswd">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:ServerUserNeedsPass" />
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:PASS" />
			</Action>
			<Action type="changeState" ref="TestConnection"/>
		</State>

		<State name="TestConnection">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:ServerLoggedIn" />
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:NOOP" />
			</Action>
			<Action type="changeState" ref="MakeDir"/>
		</State>

		<State name="MakeDir">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:ServerOk" />
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:MKD" />
			</Action>
			<Action type="changeState" ref="DelDir"/>
		</State>

		<State name="DelDir">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:DirCreated" />
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:RMD" />
			</Action>
			<Action type="changeState" ref="Ready"/>
		</State>

		<State name="Ready">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:ResponseTemplate" />
				<!-- <DataModel ref="Response" /> -->
			</Action>
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:Request" />
			</Action>
		</State>
	</StateModel>

	<StateModel name="HostToAgent" initialState="StartServer">
		<State name="StartServer">
			<Action type="start" publisher="TcpHandler"/>

			<Action type="call" method="launchProgram" publisher="Peach.Agent"/>

			<Action type="accept" publisher="TcpHandler"/>

			<!-- <Action name="Next" type="changeState" ref="InputUserName"/> -->
			<Action name="Next" type="changeState" ref="PreAuth"/>
		</State>


		<!-- This needs to be changed to support any set of client interactions. -->
		<State name="PreAuth">
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerReadyForUser"/>
				<Data DataModel="FTP:ServerReadyForUser">
					<Field name="LineModes.OneLine.Explaination" value="vsFTPd 2.3.5"/>
				</Data>
			</Action>
			<Action name="Read" type="input" publisher="TcpHandler">
				<DataModel name="PreauthCommand">
					<Choice name="Command">
						<Block name="SYST" ref="FTP:SYST"/>
						<Block name="USER" ref="FTP:USER"/>
					</Choice>
				</DataModel>
			</Action>
			<Action type="changeState" ref="PreAuth" when="State.actions[1].dataModel.find('Command').SelectedElement.name == 'SYST'"/>
			<Action type="changeState" ref="InputPasswd" when="State.actions[1].dataModel.find('Command').SelectedElement.name == 'USER'"/>
		</State>

		<State name="InputPasswd">
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerUserNeedsPass"/>
				<Data DataModel="FTP:ServerUserNeedsPass">
					<Field name="LineModes.OneLine.Explaination" value="Please specify the password"/>
				</Data>
			</Action>
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:PASS"/>
			</Action>

			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerLoggedIn"/>
			</Action>

			<Action type="changeState" ref="Ready"/>
		</State>

		<State name="Ready">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:Request"/>
			</Action>

			<Action name="Done" type="changeState" ref="Done" when="StateModel.states['Ready'].actions[0].dataModel.find('EmptyPacket') != None"/>

			<Action type="output" publisher="TcpHandler" onStart="FTP.set_response(self)">
				<DataModel ref="FTP:ResponseTemplate"/>
			</Action>

			<Action name="GetFile" type="changeState" ref="GetFile" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'STOR'"/>
			<Action name="AppenFile" type="changeState" ref="GetFile" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'APPE'"/>
			<Action name="STOUFile" type="changeState" ref="GetFile" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'STOU'"/>
			<Action name="SendFile" type="changeState" ref="SendFile" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'RETR'"/>
			<Action name="SendDirectory" type="changeState" ref="SendDirectory" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'NLST'"/>
			<Action name="ListDirectory" type="changeState" ref="ListDir" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'LIST'"/>
			<Action name="Relogin" type="changeState" ref="InputUserName" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'USER'"/>
			<Action name="Relogin2" type="changeState" ref="InputUserName" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'REIN'"/>
			<Action name="Quit" type="changeState" ref="Done" when="str(StateModel.states['Ready'].actions[0].dataModel.find('Command')) == 'QUIT'"/>

			<Action name="ReadNext" type="changeState" ref="Ready"/>
		</State>

		<State name="GetFile">
			<Action type="input" publisher="TcpHandler">
				<DataModel ref="FTP:FileData"/>
			</Action>

			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerDirectorySendOk"/>
				<Data DataModel="FTP:ServerDirectorySendOk">
					<Field name="LineModes.OneLine.Explaination" value="Transfer complete."/>
				</Data>
			</Action>

			<Action name="ReadNext" type="changeState" ref="Ready"/>
		</State>

		<State name="ListDir">
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:DirectoryList"/>
			</Action>

			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerDirectorySendOk"/>
				<Data DataModel="FTP:ServerDirectorySendOk">
					<Field name="LineModes.OneLine.Explaination" value="Directory send OK."/>
				</Data>
			</Action>

			<Action name="ReadNext" type="changeState" ref="Ready"/>
		</State>

		<State name="SendFile">
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:FileData"/>
			</Action>

			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerDirectorySendOk"/>
				<Data DataModel="FTP:ServerDirectorySendOk">
					<Field name="LineModes.OneLine.Explaination" value="Transfer complete."/>
				</Data>
			</Action>

			<Action name="ReadNext" type="changeState" ref="Ready"/>
		</State>

		<State name="SendDirectory">
			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:DirectoryData"/>
			</Action>

			<Action type="output" publisher="TcpHandler">
				<DataModel ref="FTP:ServerDirectorySendOk"/>
				<Data DataModel="FTP:ServerDirectorySendOk">
					<Field name="LineModes.OneLine.Explaination" value="Directory Send OK."/>
				</Data>
			</Action>

			<Action name="ReadNext" type="changeState" ref="Ready"/>
		</State>

		<State name="Done"/>
	</StateModel>
</Peach>

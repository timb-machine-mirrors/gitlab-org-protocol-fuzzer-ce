<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://peachfuzzer.com/2012/Peach /peach/peach.xsd"
       author="Deja Vu Security, LLC" description="Open Shortest Path First Version 2 PIT StateModels" version="0.0.2">
  <!-- Copyright (c) Deja Vu Security, LLC 2013 -->
	
	<Include ns="DataModels" src="file:##Path##/_Common/Models/Net/OSPFV2_Data.xml"/>

	<!-- Hello State Model -->
  <StateModel name="HelloStateModel" initialState="initial">
    <State name="initial">

      <Action name="OSPFHelloIn" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:HelloDump"/>
      </Action>
      
      <Action name="OSPFHelloOut" type="output" publisher="RawOSPF">
        <DataModel ref="DataModels:OSPFHello"/>
      </Action>
      
      <Action name="OSPFHelloIn1" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:HelloDump"/>
      </Action>
      
      <Action name="OSPFHelloOut1" type="output" publisher="RawOSPF">
        <DataModel ref="DataModels:OSPFHello2Way"/>
      </Action>
    </State>
  </StateModel>

  <!-- DD State Model -->
  <StateModel name="DDStateModel" initialState="initial">

    <!-- Initial Zero hello from peer -->
    <State name="initial">
      <Action name="OSPFDBHelloRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="DataModels:HelloDump"/> 
      </Action>

      <!-- send our Init hello to start ExStart -->
      <Action name="OSPFDBHelloSend" type="output" publisher="RawOSPF"> 
        <DataModel ref="DataModels:OSPFHello2Way"/> 
      </Action>

      <!-- look at the next packet -->
      <Action type="changeState" ref="NextPacket"/>
    </State> 

    <!-- Recv next packet as a possible DD -->
    <State name="NextPacket">
      <Action name="OSPFNextRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="DataModels:DDDump"/> 
      </Action>

      <!-- RECV'd another Hello -->  
      <Action name="HelloCheck" type="changeState" ref="NextPacket" when="int(StateModel.states['NextPacket'].actions[0].dataModel['Type'].InternalValue) == 1"/>
      
      <!-- If a DD start Do ExStart exchange -->
      <!-- RECV'd a DD Seq = X, I = 1, M = 1, MS =1 -->
      <Action name="DBCheck"  type="changeState" ref="DDState" when="int(StateModel.states['NextPacket'].actions[0].dataModel['Type'].InternalValue) == 2"/> 
    </State>

    <State name="DDState"> 
      <!-- SEND DD( Seq = Y, I = 1, M = 1, MS = 1 ) --> 
      <Action name="OSPFDBSend0" type="output" publisher="RawOSPF"> 
        <DataModel ref="DataModels:OSPFDatabaseDesc"/>
      </Action>

      <!-- RECV DD(Seq = Y, I = 0, M = 1, MS = 0 ) -->
      <Action name="OSPFDBRecv0" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:DDDump"/>
      </Action>

      <!-- SEND DD(Seq = Y + 1, I = 0, M = 1 MS = 1 --> 
      <Action name="OSPFDBSend1" type="output" publisher="RawOSPF">
				<DataModel ref="DataModels:OSPFDatabaseDescLSA"/>  
      </Action>
      
      <!-- RECV DD(Seq = Y, I = 0, M = 1, MS = 0 ) -->
      <Action name="OSPFDBRecv1" type="input" publisher="RawOSPF">
        <DataModel  ref="DDDump"/>
      </Action>

      <!-- SEND DD(Seq = Y + 1, I = 0, M = 1 MS = 1 --> 
      <Action name="OSPFDBSend2" type="output" publisher="RawOSPF">
				<DataModel ref="DataModels:OSPFDatabaseDescLSA2"/>  
      </Action>
      
      <!-- RECV DD(Seq = Y+2, I = 0, M = 0, MS = 0 ) -->
      <Action name="OSPFDBRecv2" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:DDDump"/>
      </Action>
      
      <Action name="OSPFDBRecv3" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:DDDump"/>
      </Action>

      <Action name="OSPFDBRecv4" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:DDDump"/>
      </Action>

      <Action name="OSPFDBRecv5" type="input" publisher="RawOSPF">
        <DataModel ref="DataModels:DDDump"/>
      </Action>

      <Action type="changeState" ref="LSRNextState"/>
    </State>

    <!-- LSR packet should be sent from slave router -->    
    <State name="LSRNextState">
      
      <Action name="LSRNextRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="DataModels:LSRDump"/> 
      </Action>

      <Action name="SendHello" type="output" publisher="RawOSPF">
        <DataModel ref="DataModels:OSPFHello2Way"/>
      </Action>
      
      <!-- RECV'd another Hello or DB -->  
      <Action type="changeState" ref="LSRNextState" when="int(StateModel.states['LSRNextState'].actions[0].dataModel['Type'].InternalValue) == 1"/>

      <!-- LSR Request -->
      <Action  type="changeState" ref="LSRState" when="int(StateModel.states['LSRNextState'].actions[0].dataModel['Type'].InternalValue) == 3"/> 
    </State>

    <!-- have valid LSR -->
    <State name="LSRState">
      <Action name="Response" type="output" publisher="RawOSPF">
        <DataModel ref="DataModels:OSPFLinkStateUpdate"/>
      </Action>
    </State>
  </StateModel>
</Peach>
<!--End-->
<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://peachfuzzer.com/2012/Peach /peach/peach.xsd"
       author="Deja Vu Security, LLC" description="Open Shortest Path First Version 2 PIT" version="0.0.2">
  
  <!-- Copyright (c) Deja Vu Security, LLC 2012 -->
  <!-- Requires Peach 3 Linux for RawIP selected protocol fuzzing -->
  
  <!-- Generic LSA Header --> 
  <DataModel name="LSAHeader">
    <Block name="LSATotal">
      <Relation from="LSALength" type="size"/>
      <Number name="LSAge" valueType="hex" size="16" endian="big" value="30 00"/> 
      <Block name="LSACheckSumArea">
        <Number name="LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 01"/> 
        <Number name="LSALinkStateID" size="32" endian="big" valueType="hex" value="A0 A0 A0 A0"/>
        <Number name="LSAAdvertisingRouter" size="32" endian="big" valueType="hex" value="##OSPFRouterID##"/> 
        <Number name="LSASequenceNumber" size="32" endian="big" valueType="hex" value="80 00 00 01"> 
          <Fixup class="SequenceIncrementFixup" /> 
        </Number> 
        <Number name="LSAChecksum" size="16" endian="big">
          <Fixup class="IcmpChecksumFixup">
            <Param name="ref" value="LSACheckSumArea"/>
          </Fixup>
        </Number> 
        <Number name="LSALength" size="16" endian="big" valueType="hex" value="00 24" />
	<Block name="LSAData"/> 
      </Block>
    </Block>
  </DataModel>

  <!-- Type 1: LSA Router Header  -->
  <DataModel name="RouterLSA" ref="LSAHeader">
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 01"/>
    
    <Block name="LSATotal.LSACheckSumArea.LSAData">
      <Flags name="flags" size="8" >
        <Flag name="Nt" position="4" size="1"/>
        <Flag name="x"  position="5" size="1"/>
        <Flag name="V"  position="6" size="1"/>
        <Flag name="E"  position="7" size="1"/> 
      </Flags>
      <Number name="RouterLSAOptions" size="8" endian="big" valueType="hex" value="00"/>
      <Number name="NumberofLinks" size="16" endian="big" valueType="hex" value="00 00">
        <Relation type="count" of="Interfaces"/>
      </Number>
      <Block name="Interfaces" minOccurs="1" maxOccurs="5">
        <Choice name="LinkIDs">
          <Number name="LinkIDRouterID"          size="32" endian="big" value="1"/>
          <Number name="LinkIDDRInterface"       size="32" endian="big" value="2" />
          <Number name="LinkIDIPNetworkOrSubnet" size="32" endian="big" value="3"/>
          <Number name="LinkIDNeighbotRouterID"  size="32" endian="big" value="4"/>
        </Choice>
        <Number name="LinkData" size="32" endian="big" valueType="hex" value="DE AD BE EF" />
        <Choice name="LinkTypes">
          <Number name="LinkTypePtoP"                       size="8" endian="big" value="1" />
          <Number name="LinkTypeConnectionToTransitNetwork" size="8" endian="big" value="2" />
          <Number name="LinkTypeConnectionToStubNetwork"    size="8" endian="big" value="3" />
          <Number name="LinkTypeVirtualLink"                size="8" endian="big" value="4" /> 
        </Choice>
        <Number name="NumberOfTOS" size="8" endian="big" >
          <Relation type="count" of="TOSs"/>
        </Number>
        <Number name="Metric" size="16" endian="big"/> 
        <Block name="TOSs" minOccurs="0" maxOccurs="4">
        </Block>
      </Block>
    </Block>
  </DataModel>

  <!-- Type 2: Network-LSA -->
  <DataModel name="NetworkLSA"  ref="LSAHeader">
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 02"/> 
    <Block name="LSATotal.LSACheckSumArea.LSAData">
    </Block>
  </DataModel>
  
  <!-- Type 3: Inter-Area-Prefix-LSA Header --> 
  <DataModel name="InterAreaPrefixLSA" ref="LSAHeader">
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 03"/> 
    <Block name="LSATotal.LSACheckSumArea.LSAData"> 
    </Block>
  </DataModel> 
  
  <!-- Type 4 : Inter-Area-Router-LSA Header --> 
  <DataModel name="InterAreaRouterLSA" ref="LSAHeader">
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 04"/> 
    <Block name="LSATotal.LSACheckSumArea.LSAData"> 
    </Block> 
  </DataModel>

  <!-- Type :5 AS-External-LSA Header --> 
  <DataModel name="ASExternalLSA" ref="LSAHeader"> 
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="40 05"/>       
    <Block name="LSATotal.LSACheckSumArea.LSAData"> 
    </Block> 
  </DataModel>

  <!-- MOSPF LSA Header (Deprecated)  --> 
  <DataModel name="MOSPFLSA" ref="LSAHeader"> 
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 06"/>       
    <Block name="LSATotal.LSACheckSumArea.LSAData"> 
    </Block> 
  </DataModel>

  
  <!-- NSSA-LSA Header -->  
  <DataModel name="NSSALSA" ref="LSAHeader"> 
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 07"/>       
    <Block name="LSATotal.LSACheckSumArea.LSAData"> 
    </Block> 
  </DataModel>
  
  <!-- Link-LSA Header -->  
  <DataModel name="LinkLSA" ref="LSAHeader"> 
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="00 08"/>
    <Block name="LSATotal.LSACheckSumArea.LSAData">
    </Block>
  </DataModel>
  
  <!-- Intra-Area-Prefix LSA Header -->
  <DataModel name="IntraAreaPrefixLSA" ref="LSAHeader"> 
    <Number name="LSATotal.LSACheckSumArea.LSAOptionAndType" size="16" endian="big" valueType="hex" value="20 09"/>
    <Block name="LSATotal.LSACheckSumArea.LSAData">
    </Block>
  </DataModel>

  <!-- LSA choice block --> 
  <DataModel name="LSAs">
    <Choice name="LSAChosen">
      <Block name="LSA1" ref="RouterLSA"           />
      <Block name="LSA2" ref="NetworkLSA"          />
      <Block name="LSA3" ref="InterAreaPrefixLSA"  />
      <Block name="LSA4" ref="InterAreaRouterLSA"  />
      <Block name="LSA5" ref="ASExternalLSA"       />
      <Block name="LSA6" ref="MOSPFLSA"            />
      <Block name="LSA7" ref="NSSALSA"             />
      <Block name="LSA8" ref="LinkLSA"             /> 
      <Block name="LSA9" ref="IntraAreaPrefixLSA"  /> 
    </Choice>
  </DataModel>
  

  <!-- OSPF V2 over IPV4 -->
  <DataModel name="OSPFv2">
    <Block name="EntirePacket">
      <Relation type="size" from="TotalLength"/>
      <Block name="IPHeader">
	<!--Number name="VerLenDSPECN" size="16" endian="big" valueType="hex" value="45 00" /-->
	<Flags size="16" endian="big">
	  <Flag name="Version"      position="0"  size="4" valueType="hex" value="4"/>
	  <Flag name="HeaderLength" position="4"  size="4" valueType="hex" value="5" />
	  <Flag name="DSCP"         position="8"  size="6" valueType="hex" value="00"/>
	  <Flag name="ECN"          position="14" size="2" valueType="hex" value="00"/>
	</Flags>
	<Number name="TotalLength" size="16" endian="big" valueType="hex" value="00 00">
	  <Relation type="size" of="EntirePacket"/>
	</Number>
	<Number name="Identification" size="16" endian="big" valueType="hex" value="00 00"/>
	<Flags name="Flags" size="8" endian="big">
	  <Flag name="Reserved" position="0" size="1" valueType="hex" value="00"/>
	  <Flag name="DF" position="1" size="1" valueType="hex" value="01"/>
	  <Flag name="MF" position="2" size="1" valueType="hex" value="00"/>
	</Flags>
	<Number name="FragOffset"     size="8"  endian="big" valueType="hex" value="00"/>
	<Number name="TTL" size="8" endian="big" value="1"/>
	<!-- Protocol # for OSPF dec 89 hex 59  -->
	<Number name="Protocol" size="8" endian="big" valueType="hex" value="59" token="true"/>
	<Number name="Checksum" size="16" endian="little" valueType="hex" value="00 00">
	  <Fixup class="checksums.IcmpChecksumFixup">
	    <Param name="ref" value="IPHeader"/>
	  </Fixup>
	</Number>
	<Blob name="SrcIP" value="##SourceIPv4##">
	  <Transformer class="Ipv4StringToNetworkOctet"/>
	</Blob>
	<Blob name="DestIP" value="##TargetIPv4##">
	  <Transformer class="Ipv4StringToNetworkOctet"/>
	</Blob>
      </Block>
      <Block name="OSPFMessage">
	<Relation type="size" from="OSPFPacketLength" />
	<Number name="OSPFVersion" size="8" endian="big" valueType="hex" value="02"  />
	<Number name="OSPFType"    size="8" endian="big" valueType="hex" value="01" />
	<Number name="OSPFPacketLength" size="16" endian="big" valueType="hex" value="00 00" >
	  <Relation type="size" of="OSPFMessage"/>
	</Number>
	<Blob name="OSPFRouterID" value="##OSPFSourceRouter##">
	  <Transformer class="Ipv4StringToNetworkOctet"/>
	</Blob>
	<Number name="OSPFAreaID" size="32" endian="big" valueType="hex" value="##OSPFAreaID##" />
	<Number name="OSPFChecksum" size="16"> 
	  <Fixup class="IcmpChecksumFixup">
	    <Param name="ref" value="OSPFMessage"/>
	  </Fixup>
	</Number>
	<Number name="AuthenticationType" size="16" endian="big" valueType="hex" value="00 00"/>
	<Number name="AuthenticationData" size="64" endian="big" valueType="hex" value="00 00 00 00 00 00 00 00"/>
	<Block name="OSPFData" />
      </Block>
    </Block>
  </DataModel>
  
  <!-- OSPF Hello Packet Type : 1 -->
  <DataModel name="OSPFHello" ref="OSPFv2">
    <Number name="OSPFMessage.OSPFType"    size="8" endian="big" value="01" />
    <Block name="OSPFMessage.OSPFData">
      <Number name="NetworkMask" size="32" endian="big" valueType="hex" value="00 00 00 00" />
      <Number name="HelloInterval"      size="16" endian="big" valueType="hex" value="##HelloInterval##" />
      <Number name="Options"            size="8"  endian="big" valueType="hex" value="02" />
      <Number name="RouterPriority"     size="8"  endian="big" valueType="hex" value="F0" />
      <Number name="RouterDeadInterval" size="32" endian="big" valueType="hex" value="00 00 00 0C" />
      <Number name="DesignatedRouterID" size="32" endian="big" valueType="hex" value="00 00 00 00" />
      <Number name="BackupDesignatedRouterID" size="32" endian="big" valueType="hex" value="00 00 00 00"/> 
      <Block name="ActiveNeighbors" />
    </Block>
  </DataModel>

  <!-- established hello --> 
  <DataModel name="OSPFHello2Way" ref="OSPFHello">
    <Number name="OSPFMessage.OSPFData.DesignatedRouterID" size="32" endian="big" valueType="hex" value="##OSPFRouterID##" />
    <Number name="OSPFMessage.OSPFData.BackupDesignatedRouterID" size="32" endian="big" valueType="hex" value="##BackUpRouterID##"/>
    <Block name="OSPFMessage.OSPFData.ActiveNeighbors" >
      <Blob name="neighbor" value="##OSPFNeighbor##">
	<Transformer class="Ipv4StringToNetworkOctet"/>
      </Blob>
    </Block>
  </DataModel>
  
  <!-- Database description Packet Type : 2 -->
  <DataModel name="OSPFDatabaseDesc" ref="OSPFv2">
    <Number name="OSPFMessage.OSPFType" size="8" endian="big" valueType="hex" value="02" />  
    <Block name="OSPFMessage.OSPFData">
      <Number name="MTU" size="16" endian="big" valueType="hex" value="05 DC" />
      <Number name="Options" size="8" endian="big" valueType="hex" value="02" />
      <Flags name="DDFlags" size="8" endian="big">
	<Flag name="OOBResyncBit" position="4" size="1" value="0" />
	<Flag name="InitialBit"   position="5" size="1" value="1" /> 
	<Flag name="MoreBit"      position="6" size="1" value="1" /> 
	<Flag name="MS"           position="7" size="1" value="1" /> 
      </Flags>
      <Number name="Seq2" size="32" valueType="hex" value="6F F2 FF 00" />
      <Block name="DDLSAs" minOccurs="0" maxOccurs="100" ref="LSAHeader" /> 
    </Block>   
  </DataModel>

  <!-- Send LSAs for sync-->
  <DataModel name="OSPFDatabaseDescLSA" ref="OSPFDatabaseDesc">
    <Flags name="OSPFMessage.OSPFData.DDFlags" size="8" endian="big">
      <Flag name="OOBResyncBit" position="4" size="1" value="0" />
      <Flag name="InitialBit"   position="5" size="1" value="0" /> 
      <Flag name="MoreBit"      position="6" size="1" value="1" /> 
      <Flag name="MS"           position="7" size="1" value="1" /> 
    </Flags>
    <Number name="OSPFMessage.OSPFData.Seq2" size="32" valueType="hex" value="6F F2 FF 01" />
    <Block name="OSPFMessage.OSPFData.DDLSAs" minOccurs="5" maxOccurs="100" ref="LSAHeader" /> 
  </DataModel>

  
  <!-- Send LSAs for sync-->
  <DataModel name="OSPFDatabaseDescLSA2" ref="OSPFDatabaseDesc">
    
    <Flags name="OSPFMessage.OSPFData.DDFlags" size="8" endian="big">
      <Flag name="OOBResyncBit" position="4" size="1" value="0" />
      <Flag name="InitialBit"   position="5" size="1" value="0" /> 
      <Flag name="MoreBit"      position="6" size="1" value="0" /> 
      <Flag name="MS"           position="7" size="1" value="1" /> 
    </Flags>

    <Number name="OSPFMessage.OSPFData.Seq2" size="32" valueType="hex" value="6F F2 FF 02" />
    
    <Block name="OSPFMessage.OSPFData.DDLSAs" minOccurs="5" maxOccurs="100" ref="LSAHeader" /> 
  </DataModel>
  
  <!-- Database Sync Slave -->
  <DataModel name="OSPFDatabaseDescSlave" ref="OSPFDatabaseDesc">
    <Number name="OSPFMessage.OSPFData.DDFlags" size="8" value="6" /> 
  </DataModel>

  <!-- Link State Request Packet Type 3 --> 
  <DataModel name="OSPFLinkStateReq" ref="OSPFv2">
    <Number name="OSPFMessage.OSPFType" size="8" endian="big" valueType="hex" value="03" />  
    <Block name="OSPFMessage.OSPFData">

      <Number name="LSType"      size="32" endian="big" valueType="hex" value="00 00 00 01"/>
      <Number name="LinkStateID" size="32" endian="big" valueType="hex" value="00 00 00 00"/>
      <Number name="AdvertisingRouter" size="32" valueType="hex" value="C0 A8 0A 02" /> 
    </Block>  
  </DataModel>

  <!-- Link State Update Packet --> 
  <DataModel name="OSPFLinkStateUpdate" ref="OSPFv2">
    <Number name="OSPFMessage.OSPFType" size="8" value="4" endian="big"  />
    <Block name="OSPFMessage.OSPFData">
      
      <Number name="LSACount" size="32" endian="big">
	<Relation type="count" of="LSABlock"/>
      </Number>
      
      <Block name="LSABlock" ref="RouterLSA" minOccurs="1" maxOccurs="100">
	<Relation from="LSACount" type="count"/>
      </Block>
    </Block>   
  </DataModel>

  <!-- Link State Acknowledgement -->
  <DataModel name="OSPFLinkStateAck" ref="OSPFv2">
    <Number name="OSPFMessage.OSPFType" size="8" value="5" endian="big"  />
    <!-- fix me-->
    <Block name="OSPFMessage.OSPFData">
      <Block name="LSAcks" minOccurs="0" maxOccurs="1024" ref="LSAHeader" /> 
    </Block>
  </DataModel>

  <!-- dump model for incoming packets --> 
  <DataModel name="HelloDump">
    <Blob name="IPHeader1" length="9"  />
    <Number name="IPProtocol" token="true" size="8" value="59" valueType="hex" />
    <Blob name="IPHeader2" length="10" /> 
    <Number name="Version" size="8" valueType="hex" value="02" token="true"/>
  </DataModel>

  <!-- DD import dump -->
  <DataModel name="DDDump">
    <!-- IP Header -->
    <Blob name="Truck" length="9"  />
    <Number name="Protocol" token="true" size="8" value="59" valueType="hex"/>
    <Blob name="HeaderRemains" length="10"/>
    
    <!-- -->
    <Number name="Version" size="8" valueType="hex" value="02" token="true"/>
    <Number name="Type" size="8" valueType="hex" />
    <Blob name="OSPFHeader" length="26" />
    <Number name="Seq1"  size="32" value="0" />
    <Blob name="TheRest" /> 
  </DataModel>
  
  <!-- LSR input model -->
  <DataModel name="LSRDump">
    <!-- IP Header -->
    <Blob name="Truck" length="9"  />
    <Number name="Protocol" token="true" size="8" value="59" valueType="hex"/>
    <Blob name="HeaderRemains" length="10"/>
    
    <!-- -->
    <Number name="Version" size="8" valueType="hex" value="02" token="true"/>
    <Number name="Type" size="8" />
    <Blob name="OSPFHeader" length="22" />
    <Blob name="Remains" /> 
  </DataModel>
  
  
  
  <!-- Hello State Model -->
  <StateModel name="HelloStateModel" initialState="initial">
    <State name="initial">

      <Action name="OSPFHelloIn" type="input" publisher="RawOSPF">
        <DataModel ref="HelloDump" />
      </Action>
      
      <Action name="OSPFHelloOut" type="output" publisher="RawOSPF">
        <DataModel ref="OSPFHello" />
      </Action>
      
      <Action name="OSPFHelloIn1" type="input" publisher="RawOSPF">
        <DataModel ref="HelloDump" />
      </Action>
      
      <Action name="OSPFHelloOut1" type="output" publisher="RawOSPF">
        <DataModel ref="OSPFHello2Way" />
      </Action>
    </State>
  </StateModel>

  <!-- DD State Model -->
  <StateModel name="DDStateModel" initialState="initial">

    <!-- Initial Zero hello from peer -->
    <State name="initial">
      <Action name="OSPFDBHelloRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="HelloDump"/> 
      </Action>

      <!-- send our Init hello to start ExStart -->
      <Action name="OSPFDBHelloSend" type="output" publisher="RawOSPF"> 
        <DataModel ref="OSPFHello2Way"/> 
      </Action>

      <!-- look at the next packet -->
      <Action type="changeState" ref="NextPacket"/>
    </State> 

    <!-- Recv next packet as a possible DD -->
    <State name="NextPacket">
      <Action name="OSPFNextRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="DDDump"/> 
      </Action>

      <!-- RECV'd another Hello -->  
      <Action name="HelloCheck" type="changeState" ref="NextPacket" when="int(StateModel.states['NextPacket'].actions[0].dataModel['Type'].InternalValue) == 1"/>
      
      <!-- If a DD start Do ExStart exchange -->
      <!-- RECV'd a DD Seq = X, I = 1, M = 1, MS =1 -->
      <Action name="DBCheck"  type="changeState" ref="DDState" when="int(StateModel.states['NextPacket'].actions[0].dataModel['Type'].InternalValue) == 2"/> 
    </State>

    <State name="DDState"> 
      <!-- SEND DD( Seq = Y, I = 1, M = 1, MS = 1 ) --> 
      <Action name="OSPFDBSend0" type="output" publisher="RawOSPF"> 
        <DataModel ref="OSPFDatabaseDesc"/>
      </Action>

      <!-- RECV DD(Seq = Y, I = 0, M = 1, MS = 0 ) -->
      <Action name="OSPFDBRecv0" type="input" publisher="RawOSPF">
        <DataModel ref="DDDump" />
      </Action>

      <!-- SEND DD(Seq = Y + 1, I = 0, M = 1 MS = 1 --> 
      <Action name="OSPFDBSend1" type="output" publisher="RawOSPF">
	<DataModel ref="OSPFDatabaseDescLSA"/>  
      </Action>
      
      <!-- RECV DD(Seq = Y, I = 0, M = 1, MS = 0 ) -->
      <Action name="OSPFDBRecv1" type="input" publisher="RawOSPF">
        <DataModel  ref="DDDump" />
      </Action>

      <!-- SEND DD(Seq = Y + 1, I = 0, M = 1 MS = 1 --> 
      <Action name="OSPFDBSend2" type="output" publisher="RawOSPF">
	<DataModel ref="OSPFDatabaseDescLSA2"/>  
      </Action>
      
      <!-- RECV DD(Seq = Y+2, I = 0, M = 0, MS = 0 ) -->
      <Action name="OSPFDBRecv2" type="input" publisher="RawOSPF">
        <DataModel ref="DDDump" />
      </Action>
      
      <Action name="OSPFDBRecv3" type="input" publisher="RawOSPF">
        <DataModel ref="DDDump" />
      </Action>

      <Action name="OSPFDBRecv4" type="input" publisher="RawOSPF">
        <DataModel ref="DDDump" />
      </Action>

      <Action name="OSPFDBRecv5" type="input" publisher="RawOSPF">
        <DataModel ref="DDDump" />
      </Action>

      <Action type="changeState" ref="LSRNextState" />
    </State>

    <!-- LSR packet should be sent from slave router -->    
    <State name="LSRNextState">
      
      <Action name="LSRNextRecv" type="input" publisher="RawOSPF"> 
        <DataModel ref="LSRDump"/> 
      </Action>

      <Action name="SendHello" type="output" publisher="RawOSPF">
        <DataModel ref="OSPFHello2Way" />
      </Action>
      
      <!-- RECV'd another Hello or DB -->  
      <Action type="changeState" ref="LSRNextState" when="int(StateModel.states['LSRNextState'].actions[0].dataModel['Type'].InternalValue) == 1"/>

      <!-- LSR Request -->
      <Action  type="changeState" ref="LSRState" when="int(StateModel.states['LSRNextState'].actions[0].dataModel['Type'].InternalValue) == 3"/> 
    </State>

    <!-- have valid LSR -->
    <State name="LSRState">
      <Action name="Response" type="output" publisher="RawOSPF">
        <DataModel ref="OSPFLinkStateUpdate"/>
      </Action>
    </State>
    
  </StateModel>
  
  
  <!-- EXCLUDES -->
  <!-- Exclude ref="OSPFHello"/>
       <Exclude ref="OSPFHello2Way"/ -->
  

  <!-- AGENT Config --> 
  <Agent name="TheAgent">
  </Agent>

  <Agent name="RemoteAgent" location="tcp://##RemoteAgentIP##:9001">
    <Monitor class="Process">
      <Param name="Executable" value="##tsharkBin##" />
      <Param name="Arguments" value="-i ##tsharkInterface##" />
      <Param name="RestartOnEachTest" value="true" />
      <Param name="FaultOnEarlyExit" value="true" />
    </Monitor>
    <Monitor class="Pcap">
      <Param name="Device" value="##Interface##" />
    </Monitor>
  </Agent>


  <Test name="Default">

    <StateModel ref="HelloStateModel"/>
    <!-- <Agent ref="TheAgent" /> -->
    <Agent ref="RemoteAgent" />

    <!--Publisher name="RawOSPF" class="Console"/-->
    <Publisher class="RawIPv4" name="RawOSPF">
      <Param name="Host" value="##MultiHost##"/>
      <Param name="Interface" value="##SourceIPv4##"/>
      <Param name="Protocol" value="89" />
    </Publisher>

    <Logger class="logger.Filesystem" >
      <Param name="Path" value="./logs/OSPFHello" />
    </Logger>
  </Test>

  <!-- hello packet --> 
  <Test name="Hello">
    <Strategy class="Sequential"/>
    <StateModel ref="HelloStateModel"/>
    <Agent ref="TheAgent" />

    <!--Publisher name="RawOSPF" class="Console"/-->
    <Publisher class="RawIPv4" name="RawOSPF">
      <Param name="Host" value="##MultiHost##"/>
      <Param name="Interface" value="##SourceIPv4##"/>
      <Param name="Protocol" value="89" />
    </Publisher>

    <Logger class="logger.Filesystem" >
      <Param name="Path" value="./logs/OSPFHello" />
    </Logger>
  </Test>


  <!-- DD MODEL Test  --> 
  <Test name="DD" >

    <StateModel ref="DDStateModel"/>
    <Agent ref="TheAgent" />

    <Publisher class="RawIPv4" name="RawOSPF">
      <Param name="Host" value="##MultiHost##"/>
      <Param name="Interface" value="##SourceIPv4##"/>
      <Param name="Protocol" value="89" />
    </Publisher>

    <Logger class="logger.Filesystem" >
      <Param name="Path" value="##LoggerPath##" />
    </Logger> 
  </Test> 
</Peach>


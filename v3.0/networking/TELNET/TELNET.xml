<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://peachfuzzer.com/2012/Peach ../peach.xsd"
       author="Deja Vu Security, LLC" description="Telnet Command Protocol PIT" version="0.0.2">

  <!-- Copyright (c) Deja Vu Security, LLC 2013 -->
	
	<PythonPath path="/home/josh/work/peach/3rdParty/IronPython-2.7.1/Lib/"/>
	<Import import="code"/>
	
  <!--
      Telnet Command Protocol
  -->

  <!-- Telnet Command Choice -->
  <DataModel name="Commands">
    <Choice>
		<!-- Stop Use - Demand to stop using specified option. -->
		<Number name="Dont" valueType="hex" value="fe" token="true"/>
		<!-- Start Use - Request to start using specified option. -->
		<Number name="Do" valueType="hex" value="fd" token="true"/>
		<!-- Won't Use - Reject the proposed option. -->
		<Number name="Wont" valueType="hex" value="fc" token="true"/>
		<!-- Will Use - Agreement to use the specified option. -->
		<Number name="Will" valueType="hex" value="fb" token="true"/>
		<!-- SubNegotiate - Begin option subnegotiation. -->
		<Number name="SubNeg" valueType="hex" value="fa" token="true"/>
		<!-- Go ahead! - End of input for half-duplex connections. -->
		<Number name="GA" valueType="hex" value="f9" token="true"/>
		<!-- Erase line - Request that operator erase the previous line. -->
		<Number name="EraseLine" valueType="hex" value="f8" token="true"/>
		<!-- Erase Char - Request that operator erase the previous character. -->
		<Number name="EraseChar" valueType="hex" value="f7" token="true"/>
		<!-- You there? - Request acknowledgment. -->
		<Number name="Ping" valueType="hex" value="f6" token="true"/>
		<!-- Abort Output - Cancel output from current process. -->
		<Number name="AbortOutput" valueType="hex" value="f5" token="true"/>
		<!-- Interrupt Process - Interrupt current process. -->
		<Number name="IntProc" valueType="hex" value="f4" token="true"/>
		<!-- Break - Operator pressed the Break key or the Attention key. -->
		<Number name="Break" valueType="hex" value="f3" token="true"/>
		<!-- Data Mark - End of urgent data stream. -->
		<Number name="DataMark" valueType="hex" value="f2" token="true"/>
		<!-- No Operation - No operation command. -->
		<Number name="NoOp" valueType="hex" value="f1" token="true"/>
		<!-- End subNeg - End of option subnegotiation command. -->
		<Number name="EndSubNeg" valueType="hex" value="f0" token="true"/>
		<!-- Generic catch-all for custom/unknown commands. -->
		<Blob name="Unknown" length="2"/>
	</Choice>
  </DataModel>

  <!-- Telnet Option ID Choice -->
  <DataModel name="Options">
    <Choice> 
		<!-- Binary Xmit - Allows transmission of binary data. -->
		<Number name="BinXmit" valueType="hex" value="00" token="true"/>
		<!-- Echo Date - Causes server to echo back all keystrokes. -->
		<Number name="Echo" valueType="hex" value="01" token="true"/>
		<!-- Reconnect - Reconnects to another TELNET host. -->
		<Number name="Reconnect" valueType="hex" value="02" token="true"/>
		<!-- Suppress Go Ahead! - Disables Go Ahead! command. -->
		<Number name="SuppressGA" valueType="hex" value="03" token="true"/>
		<!-- Message Size - Conveys approximate message size. -->
		<Number name="MessageSize" valueType="hex" value="04" token="true"/>
		<!-- Option Status - Lists status of options. -->
		<Number name="OptStat" valueType="hex" value="05" token="true"/>
		<!-- Timing Mark - Marks a data stream position for reference. -->
		<Number name="TimingMark" valueType="hex" value="06" token="true"/>
		<!-- R/C XmtEcho - Allows remote control of terminal printers. -->
		<Number name="RCEcho" valueType="hex" value="07" token="true"/>
		<!-- Line Width - Sets output line width. -->
		<Number name="LineWidth" valueType="hex" value="08" token="true"/>
		<!-- Page Length - Sets page length in lines. -->
		<Number name="PageLen" valueType="hex" value="09" token="true"/>
		<!-- CR Use - Determines handling of carriage returns. -->
		<Number name="CRUse" valueType="hex" value="0a" token="true"/>
		<!-- Horizontal Tabs - Sets horizontal tabs. -->
		<Number name="HorizTab" valueType="hex" value="0b" token="true"/>
		<!-- Horizontal Tab Use - Determines handling of horizontal tabs. -->
		<Number name="HorizTabUse" valueType="hex" value="0c" token="true"/>
		<!-- Form Feed Use - Determines handling of form feeds. -->
		<Number name="FFUse" valueType="hex" value="0d" token="true"/>
		<!-- Vertical Tabs - Sets vertical tabs. -->
		<Number name="VerTabs" valueType="hex" value="0e" token="true"/>
		<!-- Vertical Tab Use - Determines handling of vertical tabs. -->
		<Number name="VerTabUse" valueType="hex" value="0f" token="true"/>
		<!-- Line Feed Use - Determines handling of line feeds. -->
		<Number name="LFUse" valueType="hex" value="10" token="true"/>
		<!-- Extended ASCII - Defines extended ASCII characters. -->
		<Number name="ExtASCII" valueType="hex" value="11" token="true"/>
		<!-- Logout - Allows for forced log-off. -->
		<Number name="Logout" valueType="hex" value="12" token="true"/>
		<!-- Byte Macro - Defines byte macros. -->
		<Number name="ByteMacro" valueType="hex" value="13" token="true"/>
		<!-- Data Terminal - Allows subcommands for Data Entry to be sent. -->
		<Number name="DataTerm" valueType="hex" value="14" token="true"/>
		<!-- SUPDUP - Allows use of SUPDUP display protocol. -->
		<Number name="SUPDUP" valueType="hex" value="15" token="true"/>
		<!-- SUPDUP Output - Allows sending of SUPDUP output. -->
		<Number name="SUPDUPOut" valueType="hex" value="16" token="true"/>
		<!-- Send Locale - Allows terminal location to be sent. -->
		<Number name="SendLocale" valueType="hex" value="17" token="true"/>
		<!-- Terminal Type - Allows exchange of terminal type information. -->
		<Number name="TermType" valueType="hex" value="18" token="true"/>
		<!-- End Record - Allows use of the End of record code (0xEF). -->
		<Number name="EndRecord" valueType="hex" value="19" token="true"/>
		<!-- TACACS ID - User ID exchange used to avoid more than 1 log-in. -->
		<Number name="TACACSID" valueType="hex" value="1a" token="true"/>
		<!-- Output Mark - Allows banner markings to be sent on output. -->
		<Number name="OutputMark" valueType="hex" value="1b" token="true"/>
		<!-- Terminal ID -A numeric ID used to identify terminals. -->
		<Number name="TermID" valueType="hex" value="1c" token="true"/>
		<!-- 3270 Regime - Allows emulation of 3270 family terminals. -->
		<Number name="3270" valueType="hex" value="1d" token="true"/>
		<!-- X.3 PAD - Allows use of X.3 protocol emulation. -->
		<Number name="X3" valueType="hex" value="1e" token="true"/>
		<!-- Window Size  - Extended options list. -->
		<Number name="WinSize" valueType="hex" value="1f" token="true"/>
		<!-- Terminal Speed - Conveys baud rate information. -->
		<Number name="TermSpeed" valueType="hex" value="20" token="true"/>
		<!-- Remote Flow - Provides flow control (XON, XOFF). -->
		<Number name="RemoteFlow" valueType="hex" value="21" token="true"/>
		<!-- Linemode - Provides linemode bulk character transactions. -->
		<Number name="Linemode" valueType="hex" value="22" token="true"/>
		<!-- Location - ... -->
		<Number name="Location" valueType="hex" value="23" token="true"/>		
		<!-- Extended - Extended options list. -->
		<Number name="Ext" valueType="hex" value="ff" token="true"/>
		<!-- Generic catch-all for custom/unknown options. -->
		<Blob name="Unknown" length="2"/>
	</Choice>
  </DataModel>

  <!-- Telnet OptCode Block -->
  <DataModel name="optCode">
    <Number name="iac" valueType="hex" value="ff" token="true"/>
		<Block name="command" ref="Commands" minOccurs="1" maxOccurs="1"/>
		<Block name="optionIds" ref="Options" minOccurs="0" maxOccurs="-1"/>
		<Blob name="data" />
  </DataModel>

	<!-- <DataModel ref="optCode" > -->
	<!-- 	<Number name="Do" valueType="hex" value="fd" token="true"/> -->
	<!-- 	<Number name="SuppressGA" valueType="hex" value="03" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Will" valueType="hex" value="fb" token="true"/> -->
	<!-- 	<Number name="RemoteFlow" valueType="hex" value="21" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Will" valueType="hex" value="fb" token="true"/> -->
	<!-- 	<Number name="Linemode" valueType="hex" value="22" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Do" valueType="hex" value="fd" token="true"/> -->
	<!-- 	<Number name="OptStat" valueType="hex" value="05" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Wont" valueType="hex" value="fc" token="true"/> -->
	<!-- 	<Number name="Location" valueType="hex" value="23" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Wont" valueType="hex" value="fc" token="true"/> -->
	<!-- 	<Number name="Echo" valueType="hex" value="01" token="true"/> -->
	<!-- </DataModel> -->

	<!-- <DataModel ref="optCode"> -->
	<!-- 	<Number name="Do" valueType="hex" value="fd" token="true"/> -->
	<!-- 	<Number name="Echo" valueType="hex" value="01" token="true"/> -->
	<!-- </DataModel> -->

	
  <!-- Telnet Full DataModel -->
  <DataModel name="Telnet">
	<!-- Iterate Over OptCodes-->
	<Block name="optCodes" ref="optCode" minOccurs="0" maxOccurs="-1"/>
	<!-- All content not proceeded with an i.a.c. flag is collected as raw data. -->
	<Blob name="data"/>
  </DataModel>

  <!-- Telnet Negotiate Connect Model -->
  <DataModel name="TelnetConnect">
		<Block name="TelnetNegotiateMessage" ref="Telnet">
			<Block name="optCodes">
				<Block name="DoSuppressGA">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Do" valueType="hex" value="fd" token="true"/>
					<Number name="SuppressGA" valueType="hex" value="03" token="true"/>
				</Block>
				<Block name="WillRemoteFlow">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Will" valueType="hex" value="fb" token="true"/>
					<Number name="RemoteFlow" valueType="hex" value="21" token="true"/>
				</Block>
				<Block name="WillLinemode">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Will" valueType="hex" value="fb" token="true"/>
					<Number name="Linemode" valueType="hex" value="22" token="true"/>
				</Block>
				<Block name="DoOptStat">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Do" valueType="hex" value="fd" token="true"/>
					<Number name="OptStat" valueType="hex" value="05" token="true"/>
				</Block>
				<Block name="WontLocation">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Wont" valueType="hex" value="fc" token="true"/>
					<Number name="Location" valueType="hex" value="23" token="true"/>
				</Block>
				<Block name="DontEcho">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Wont" valueType="hex" value="fc" token="true"/>
					<Number name="Echo" valueType="hex" value="01" token="true"/>
				</Block>
				<Block name="DoEcho">
					<Number name="iac" valueType="hex" value="ff" token="true"/>
					<Number name="Do" valueType="hex" value="fd" token="true"/>
					<Number name="Echo" valueType="hex" value="01" token="true"/>
				</Block>
			</Block>
		</Block>
  </DataModel>

  <!-- Telnet Listen "Login:" Model -->
  <DataModel name="TelnetLoginPrompt">
	<Blob name="data"/>
	<String name="target" value="##UserPrompt##" token="true"/>
  </DataModel>
  
  <!-- Telnet Username Model -->
  <DataModel name="TelnetUsername">
	<Block name="TelnetUsernameMessage" ref="Telnet">
	  <String name="data" value="##Username##" token="true"/>
	  <Blob name="return" valueType="hex" value="0d" token="true"/>
	</Block>
  </DataModel>

  <!-- Telnet Listen "Password:" Model -->
  <DataModel name="TelnetPassPrompt">
	<Blob name="data"/>
	<String name="target" value="##PassPrompt##" token="true"/>
  </DataModel>
  
  <!-- Telnet Password Model -->
  <DataModel name="TelnetPassword">
	<Block name="TelnetPasswordMessage" ref="Telnet">
	  <String name="data" value="##Password##" token="true"/>
	  <Blob name="return" valueType="hex" value="0d" token="true"/>
	</Block>
  </DataModel>

  <!-- Telnet Listen ":~$" Model -->
  <DataModel name="TelnetCmdPrompt">
	<Blob name="data"/>
	<String name="target" value="##CmdPrompt##" token="true"/>
  </DataModel>
  
  <!-- Telnet Send Command Model -->
  <DataModel name="TelnetCommand">
	<Block name="TelnetCommandMessage" ref="Telnet">
	  <String name="data" value="##Command##" token="true"/>
	  <Blob name="return" valueType="hex" value="0d" token="true"/>
	</Block>
  </DataModel>
   
  <!-- Agent conifuration to monitor for crashes -->
  <Agent name="TheAgent">
  </Agent> 
	
  <!-- Telnet Simple State Model -->
  <StateModel name="AgentToHost" initialState="Initial">
	<State name="Initial">
	
	  <!-- Telnet Start/Negotiate Session -->
      <Action name="TelnetSendNegotiate" type="output" publisher="TcpHandler">
        <DataModel ref="TelnetConnect" />
      </Action>
	  
      <!-- Wait for "Login:" Prompt -->
	  <Action name="TelnetListenLogin" type="input" publisher="TcpHandler">
	    <DataModel ref="TelnetLoginPrompt" />
	  </Action>

	  <!-- Telnet Send Username Value -->
      <Action name="TelnetSendUsername" type="output" publisher="TcpHandler">
        <DataModel ref="TelnetUsername" />
      </Action>

      <!-- Wait for "Password:" Prompt -->
	  <Action name="TelnetListenPass" type="input" publisher="TcpHandler">
	    <DataModel ref="TelnetPassPrompt" />
	  </Action>
	  
	  <!-- Telnet Send Password Value -->
      <Action name="TelnetSendPassword" type="output" publisher="TcpHandler">
        <DataModel ref="TelnetPassword" />
      </Action>

      <!-- Wait for ":~$" Prompt -->
	  <Action name="TelnetListenCmd" type="input" publisher="TcpHandler">
	    <DataModel ref="TelnetCmdPrompt" />
	  </Action>

	  <!-- Telnet Send Command Value -->
      <Action name="TelnetSend" type="output" publisher="TcpHandler">
        <DataModel ref="TelnetCommand" />
      </Action>

	</State>
  </StateModel>
	
  <!-- Default test case -->
  <Test name="Default">
	<StateModel ref="AgentToHost"/>
	<Agent ref="TheAgent" />
	<Publisher class="Tcp" name="TcpHandler">
	  <Param name="Host" value="##TargetHost##" />
	  <Param name="Port" value="##TargetPort##" />
	</Publisher>
	<Strategy class="##Strategy##"/>
	<Logger class="logger.Filesystem" >
	  <Param name="Path" value="##LoggerPath##" />
	</Logger>	
  </Test>
  
</Peach>

#! /bin/sh
### BEGIN INIT INFO
# Provides:          pf_controller
# Required-Start:
# Required-Stop:
# Default-Start:
# Default-Stop:      6
# Short-Description: Starts pf_controller service
# Description:       Starts Peach Controller Node Service.
### END INIT INFO

# Author: Mick Ayzenberg <mick@dejavusecurity.com>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="pf_controller Service"
NAME=PeachFarm.Controller.Service.exe
DAEMON=/usr/bin/mono-service
DAEMON_ARGS="/opt/peachfarm/$NAME"
SCRIPTNAME=/etc/init.d/pf_controller
OPTIONS="MONO_GC_PARAMS=max-heap-size=1g"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	if [ -f /tmp/$NAME.lock ]
	then
		return 1
	fi
	export $OPTIONS
	$DAEMON $DAEMON_ARGS
	return "$?"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	if [ -f /tmp/$NAME.lock ]
	then
		kill `cat /tmp/$NAME.lock `
		return "$?"
	fi
	return 1
}

case "$1" in
  start)
	echo "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) echo "Success" ;;
		2) echo "Failure" ;;
	esac
	;;
  stop)
	echo "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) echo "Success" ;;
		2) echo "Failure" ;;
	esac
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	echo "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
        sleep 1
		do_start
		case "$?" in
			0) echo "Success" ;;
			1) echo "Failure to end old process" ;; # Old process is still running
			*) echo "Failure" ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		echo "Failed to stop old process."
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
	exit 3
	;;
esac

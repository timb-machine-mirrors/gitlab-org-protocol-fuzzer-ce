<HTML>
<HEAD>
<TITLE>OpenType Layout tag registry</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<LINK REL=STYLESHEET HREF="otspec.css" TYPE="text/css"></HEAD>
<BODY BGCOLOR="#FFFFFF" BOTTOMMARGIN="20" TOPMARGIN="0" LEFTMARGIN="0">		
	
<!--TOOLBAR_START--><!--TOOLBAR_EXEMPT--><!--TOOLBAR_END--><P><BR>

<CENTER><P>

<TABLE WIDTH=580 CELLSPACING=0 CELLPADDING=0 BORDER=0>

<TR>
<TD HEIGHT=1 WIDTH=20><IMG SRC="pixel.gif" WIDTH=20 HEIGHT=1 ALT=""></TD>
<TD HEIGHT=1 WIDTH=60><IMG SRC="pixel.gif" WIDTH=60 HEIGHT=1 ALT=""></TD>
<TD HEIGHT=1 WIDTH=480><IMG SRC="pixel.gif" WIDTH=480 HEIGHT=1 ALT=""></TD>
<TD HEIGHT=1 WIDTH=20><IMG SRC="pixel.gif" WIDTH=20 HEIGHT=1 ALT=""></TD>
</TR>
<TR>
<TD COLSPAN=4 WIDTH=580 HEIGHT=5><IMG SRC="toprule.gif" WIDTH=580 HEIGHT=5></TD>
</TR>

<TR>
<TD WIDTH=20></TD>
<TD WIDTH=560 COLSPAN=3 VALIGN=TOP><FONT FACE="Verdana, Arial, Helvetica" SIZE=1 CLASS=detail>
	<A HREF="/typography/default.asp">Microsoft Typography</A>
	 | <A HREF="/typography/creators.htm">Developer information</A>
         | <A HREF="/typography/default.htm">Specifications</A>
	 | <A HREF="ttoreg.htm">OpenType Layout tag registry</A>
</FONT></TD>
</TR>

<TR>
<TD COLSPAN=4 WIDTH=580 HEIGHT=20><IMG SRC="baserule.gif" WIDTH=580 HEIGHT=20 ALT=""></TD>
</TR>

<TR>
<TD WIDTH=20></TD>
<TD WIDTH=60 VALIGN=TOP></TD>
<TD WIDTH=480 VALIGN=TOP>
<P><BR>

<P>
<BR>
<B>Registered features - <i>definitions and implementations</i></B>
<P>
<A HREF="features_ae.htm">a - e</A>
 | 
<A HREF="features_fj.htm">f - j</A>
 | 
<A HREF="features_ko.htm">k - o</A>
 | 
<A HREF="features_pt.htm">p - t</A>
 | 
u - z

<P>
<BR>

       <P><A NAME="unic"></A><B>Tag:</B> 'unic'</P>
       <P><I>Friendly name:</I> Unicase</P>
       <P><I>Registered by:</I> Tiro Typeworks / Emigre</P>
       <P><I>Function:</I> This feature maps upper- and lowercase letters to a mixed 
        set of lowercase and small capital forms, resulting in a single case alphabet 
        (for an example of unicase, see the Emigre type family Filosofia). The letters 
        substituted may vary from font to font, as appropriate to the design. If 
        aligning to the x-height, smallcap glyphs may be substituted, or specially 
        designed unicase forms might be used. Substitutions might also include 
        specially designed figures.</P>
       <P><IMG SRC="unicprop.gif" WIDTH="427" HEIGHT="44" ALT="unic proposal illustration"></P>
       <P><I>Example:</I> The user enters text as uppercase, lowercase or mixed case, 
        and gets unicase text.</P>
       <P><I>Recommended implementation:</I> The unic table maps some uppercase and 
        lowercase glyphs to corresponding unicase forms (GSUB lookup type 1).</P>
       <P><I>Application interface:</I> For GIDs found in the unic coverage table, the 
        application passes GIDs to the unic table, and gets back new GIDs.</P>
       <P><I>UI suggestion:</I> This feature should be off by default.</P>
       <P><I>Script/language sensitivity:</I> Applies only to scripts with both upper- 
        and lowercase forms (e.g. Latin, Cyrillic, Greek).</P>
       <P><I>Feature interaction:</I> This feature may be used in combination with 
        other substitution (GSUB) features, whose results it may override.</P>

       <p><br>
       </p>
       <p><a name="valt"></a><b>Tag: </b>'valt'</p>
       <p><i>Friendly name: </i>Alternate Vertical Metrics</p>
       <p><i>Registered by: </i>Adobe (Modified by Adobe, this is the newer 
        description)</p>
       <p><i>Function: </i>Repositions glyphs to visually center them within 
        full-height metrics, for use in vertical setting. Typically applies to 
        full-width Latin glyphs, which are aligned on a common horizontal baseline and 
        not rotated when set vertically in CJKV fonts.</p>
       <p><i>Example: </i>Applying this feature would shift a Roman h down, or y up, 
        from their default full-width positions.</p>
       <p><i>Recommended implementation: </i>The font specifies alternate metrics for 
        the original glyphs (GPOS lookup type 1).</p>
       <p><i>Application interface: </i>For GIDs found in the valt coverage table, the 
        application passes the GIDs to the table and gets back positional adjustments 
        (YPlacement).</p>
       <p><i>UI suggestion: </i>This feature should be active by default in 
        vertical-setting contexts.</p>
       <p><i>Script/language sensitivity: </i>Applies only to scripts with vertical 
        writing modes.</p>
       <p><i>Feature interaction: </i>This feature is mutually exclusive with all other 
        glyph-height features (e.g. vhal and vpal), which should be turned off when 
        it's applied. It deactivates the <a href="features_ko.htm#kern">kern</a> feature.</p>
       <P><BR>
        <A NAME="vatu"></A><B>Tag: </B>
       &quot;vatu&quot;<P>
        <I>Friendly name: </I>
       Vattu Variants
       <P>
        <I>Registered by: </I>
       Microsoft<P>
        <I>Function: </I>
       Substitutes ligatures for conjuncts made up of base consonants with consonants 
       that have vattu forms.
       <P>
        <I>Example: </I>
       In the Devanagari (Indic) script, the consonant Ra takes a vattu form, when it 
       is not the syllable initial consonant in a conjunct. This form ligates with the 
       base consonant as well as half forms of consonants.
       <P>
        <I>Recommended implementation: </I>The <B>vatu</B>
       table maps consonant and vattu form combinations to their respective ligatures 
       (GSUB lookup type 4).<P>
        <I>Application interface: </I>For substitutions defined in the <B>vatu</B>
       table, the application passes the sequence of GIDs to the table, and gets back 
       the GID for the vattu variant ligature.
       <P>
        <I>UI suggestion: </I>
       This feature should be on by default.<P>
        <I>Script/language sensitivity: </I>
       Required in Indic scripts. eg: Devanagari.<P>
        <I>Feature interaction: </I>
       This feature overrides the results of all other features.<P>
       <p><br>
       </p>
       <p><a name="vert"></a><b>Tag: </b>'vert'</p>
       <p><i>Friendly name: </i>Vertical Alternates</p>
       <p><i>Registered by: </i>Microsoft/Adobe</p>
       <p><i>Function: </i>Replaces default forms with variants adjusted for vertical 
        writing when in vertical writing mode. While most CJKV glyphs remain vertical 
        when set in vertical writing mode, some take a different form (usually rotated 
        and repositioned) for this purpose. Glyphs covered by this feature correspond 
        to the set normally rotated in low-end DTP applications.</p>
       <p><i>Example: </i>In vertical writing mode, the opening parenthesis (U+FF08) is 
        replaced by the rotated form (U+FE35).</p>
       <p><i>Recommended implementation: </i>The font includes rotated versions of the 
        glyphs covered by this feature. The vert table maps the standard forms to the 
        corresponding rotated forms (GSUB lookup type 1). This feature should be the 
        last substitution in the font, and take input from other features.</p>
       <p><i>Application interface: </i>For GIDs found in the vert coverage table, the 
        application passes GIDs to the feature, and gets back new GIDs. See the <a href="#vrt2">
         vrt2</a> feature description for more details.</p>
       <p><i>UI suggestion: </i>This feature should be active by default when vertical 
        writing mode is on if the <a href="#vrt2">vrt2</a> feature is not present. See 
        the vrt2 feature description for more details, and a discussion of vertical 
        writing in OpenType.
       </p>
       <p><i>Script/language sensitivity: </i>Applies only to scripts with vertical 
        writing capability.</p>
       <p><i>Feature interaction: </i>This is a subset of the <a href="#vrt2">vrt2</a> feature; 
        vrt2 is preferred. May be used in addition to any other feature.</p>
       <P><BR>
        <a name="vhal"></a><b>Tag: </b>'vhal'</P>
       <p><i>Friendly name: </i>Alternate Vertical Half Metrics</p>
       <p><i>Registered by: </i>Adobe
       </p>
       <p><i>Function: </i>Respaces glyphs designed to be set on full-em heights, 
        fitting them onto half-em heights. This differs from valt in that it does not 
        substitute new glyphs.</p>
       <p><i>Example: </i>The user may invoke this feature in a CJKV font to get better 
        fit for punctuation or symbol glyphs without disrupting the monospaced 
        alignment.</p>
       <p><i>Recommended implementation: </i>The font specifies alternate metrics for 
        the full-height glyphs (GPOS lookup type 1).</p>
       <p><i>Application interface: </i>For GIDs found in the vhal coverage table, the 
        application passes the GIDs to the table and gets back positional adjustments 
        (XPlacement, XAdvance, YPlacement and YAdvance).</p>
       <p><i>UI suggestion: </i>This feature would be off by default.</p>
       <p><i>Script/language sensitivity: </i>Used only in CJKV fonts.</p>
       <p><i>Feature interaction: </i>This feature is mutually exclusive with all other 
        glyph-height features (e.g. <a href="#valt">valt</a> and <a href="#vpal">vpal</a>), 
        which should be turned off when it&#146;s applied. It deactivates the kern 
        feature. See also <a href="features_fj.htm#halt">halt</a>.</p>


       <P><BR><A NAME="vjmo"></A><B>Tag: </B>&quot;vjmo&quot;
       <P><I>Friendly name: </I>Vowel Jamo Forms
       <P><I>Registered by: </I>Microsoft
       <P><I>Function: </I>Substitutes the vowel jamo form of a cluster.
       <P><I>Example: </I>In Hangul script, the jamo cluster is composed of three parts (leading consonant, vowel, and trailing consonant). When a sequence of vowel class jamos are found, their combined vowel jamo form is 
       substituted.
       <P><I>Recommended implementation: </I>The <B>vjmo</B>
       table maps the sequence required to convert a series of jamos into its vowel jamo form 
       (GSUB lookup type 4).
       <P><I>Application interface: </I>For substitutions defined in the <B>vjmo</B>
       table, the application passes the sequence of GIDs to the feature, and gets 
       back the GID for the vowel jamo form.<P>
        <I>UI suggestion: </I>This feature should be on by default.<P>
        <I>Script/language sensitivity: </I>Required for Hangul script when Ancient Hangul writing system is supported.<P>
        <I>Feature interaction: </I>This feature overrides the results of all other features.<P>
       <P><BR>
       </P>
       <p><a name="vkna"></a><b>Tag: </b>'vkna'</p>
       <p><i>Friendly name: </i>Vertical Kana Alternates</p>
       <p><i>Registered by: </i>Adobe
       </p>
       <p><i>Function: </i>Replaces standard kana with forms that have been specially 
        designed for only vertical writing. This is a typographic optimization for 
        improved fit and more even color. Also see <a href="features_fj.htm#hkna">hkna</a>.</p>
       <p><i>Example: </i>Standard full-width kana (hiragana and katakana) are replaced 
        by forms that are designed for vertical use.</p>
       <p><i>Recommended implementation: </i>The font includes a set of 
        specially-designed glyphs, listed in the vkna coverage table. The vkna feature 
        maps the standard full-width forms to the corresponding special vertical forms 
        (GSUB lookup type 1).</p>
       <p><i>Application interface: </i>For GIDs found in the vkna coverage table, the 
        application passes GIDs to the feature, and gets back new GIDs.</p>
       <p><i>UI suggestion: </i>This feature would be off by default.</p>
       <p><i>Script/language sensitivity: </i>Applies only to fonts that support kana 
        (hiragana and katakana).</p>
       <p><i>Feature interaction: </i>Since this feature is only for vertical use, 
        features applying to horizontal behaviors (e.g. <a href="features_ko.htm#kern">kern</a>) do not apply.</p>
       <P><BR>
       <p><a name="vkrn"></a><b>Tag: </b>'vkrn'</p>
       <p><i>Friendly name: </i>Vertical Kerning</p>
       <p><i>Registered by: </i>Adobe
       </p>
       <p><i>Function: </i>Adjusts amount of space between glyphs, generally to provide 
        optically consistent spacing between glyphs. Although a well-designed typeface 
        has consistent inter-glyph spacing overall, some glyph combinations require 
        adjustment for improved legibility. Besides standard adjustment in the vertical 
        direction, this feature can supply size-dependent kerning data via device 
        tables, &quot;cross-stream&quot; kerning in the X text direction, and 
        adjustment of glyph placement independent of the advance adjustment. Note that 
        this feature may apply to runs of more than two glyphs, and would not be used 
        in monospaced fonts. Also note that this feature applies only to text set 
        vertically.</p>
       <p><i>Example: </i>When the katakana character U+30B9 or U+30D8 is followed by 
        U+30C8 in a vertical setting, U+30C8 is shifted up to fit more evenly.</p>
       <p><i>Recommended implementation: </i>The font stores a set of adjustments for 
        pairs of glyphs (GPOS lookup type 2 or 8). These may be stored as one or more 
        tables matching left and right classes, &amp;/or as individual pairs. 
        Additional adjustments may be provided for larger sets of glyphs (e.g. 
        triplets, quadruplets, etc.) to overwrite the results of pair kerns in 
        particular combinations.</p>
       <p><i>Application interface: </i>The application passes a sequence of GIDs to 
        the kern table, and gets back adjusted positions (XPlacement, XAdvance, 
        YPlacement and YAdvance) for those GIDs. When using the type 2 lookup on a run 
        of glyphs, it's critical to remember to not consume the last glyph, but to keep 
        it available as the first glyph in a subsequent run (this is a departure from 
        normal lookup behavior).</p>
       <p><i>UI suggestion: </i>This feature should be active by default for vertical 
        text setting. Applications may wish to allow users to add further 
        manually-specified adjustments to suit specific needs and tastes.</p>
       <p><i>Script/language sensitivity: </i>None</p>
       <p><i>Feature interaction: </i>If 'vkrn' is activated, 'vpal' must also be 
        activated if it exists. (If 'vpal' is activated, there is no requirement that 
        'vkrn' must also be activated.) May be used in addition to any other feature 
        except those which result in fixed (uniform) advance heights.
       </p>
       <P><BR>
        <a name="vpal"></a><b>Tag: </b>'vpal'</P>
       <p><i>Friendly name: </i>Proportional Alternate Vertical Metrics</p>
       <p><i>Registered by: </i>Adobe
       </p>
       <p><i>Function: </i>Respaces glyphs designed to be set on full-em heights, 
        fitting them onto individual (more or less proportional) vertical heights. This 
        differs from valt in that it does not substitute new glyphs (GPOS, not GSUB 
        feature). The user may prefer the monospaced form, or may simply want to ensure 
        that the glyph is well-fit.</p>
       <p><i>Example: </i>The user may invoke this feature in a Japanese font to get 
        Latin, Kanji, Kana or Symbol glyphs with the full-height design but individual 
        metrics.</p>
       <p><i>Recommended implementation: </i>The font specifies alternate heights for 
        the full-height glyphs (GPOS lookup type 1).</p>
       <p><i>Application interface: </i>For GIDs found in the vpal coverage table, the 
        application passes the GIDs to the table and gets back positional adjustments 
        (XPlacement, XAdvance, YPlacement and YAdvance).</p>
       <p><i>UI suggestion: </i>This feature would be off by default.</p>
       <p><i>Script/language sensitivity: </i>Used mostly in CJKV fonts.</p>
       <p><i>Feature interaction: </i>This feature is mutually exclusive with all other 
        glyph-height features (e.g. <a href="#valt">valt</a> and <a href="#vhal">vhal</a>), 
        which should be turned off when it's applied. Applying this feature should 
        activate the <a href="features_ko.htm#kern">kern</a> feature. See also <a href="features_pt.htm#palt">palt</a>.</p>
       <p><br>
       </p>
       <p><a name="vrt2"></a><b>Tag: </b>'vrt2'</p>
       <p><i>Friendly name: </i>Vertical Alternates and Rotation</p>
       <p><i>Registered by: </i>Adobe</p>
       <p><i>Function: </i>Replaces some fixed-width (half-, third- or quarter-width) 
        or proportional-width glyphs (mostly Latin or katakana) with forms suitable for 
        vertical writing (that is, rotated 90 degrees clockwise). Note that these are a 
        superset of the glyphs covered in the vert table.</p>
       <p>ATM/NT 4.1 and the Windows 2000 OTF driver impose the following requirements 
        for an OpenType font with CFF outlines to be used for vertical writing: the 
        vrt2 feature must be present in the GSUB table, it must comprises a single 
        lookup of LookupType 1 and LookupFlag 0, and the lookup must have a single 
        subtable. The predecessor feature, <a href="#vert">vert</a>, is ignored.<br>
       </p>
       <p>
        A rotated glyph must be designed such that its top side bearing and vertical 
        advance as recorded in the <a href="vmtx.htm">Vertical Metrics ('vmtx') table</a>
        are identical to the left side bearing and horizontal advance, respectively, of 
        the corresponding upright glyph as recorded in the <a href="hmtx.htm">Horizontal 
         Metrics ('hmtx') table</a>. (The horizontal advance of the rotated glyph may 
        be set to any value, since the glyph is intended only for vertical writing use. 
        The vendor may however set it to head.unitsPerEm, to prevent overlap during 
        font proofing tests, for example.)<br>
       </p>
       <p>Thus, proportional-width glyphs with rotated forms in the vrt2 feature will 
        appear identically spaced in both vertical and horizontal writing. In order for 
        kerning to produce identical results as well, developers must ensure that the 
        Vertical Kerning (<a href="#vkrn">vkrn</a>) feature record kern values between 
        the rotated glyphs that are the same as kern values between their corresponding 
        upright glyphs in the Kerning (<a href="features_ko.htm#kern">kern</a>) feature.</p>
       <p><i>Example: </i>Proportional- or half-width Latin and half-width katakana 
        characters are rotated 90 degrees clockwise for vertical writing.</p>
       <p><i>Recommended implementation: </i>The font includes rotated versions of the 
        glyphs covered by this feature. The vrt2 table maps the standard (horizontal) 
        forms to the corresponding vertical (rotated) forms (GSUB lookup type 1). This 
        feature should be the last substitution in the font, and take input from other 
        features.</p>
       <p><i>Application interface: </i>For GIDs found in the vrt2 coverage table, the 
        application passes GIDs to the feature, and gets back new GIDs.</p>
       <p><i>UI suggestion: </i>This feature should be active by default when vertical 
        writing mode is on, although the user must be able to override it.</p>
       <p><i>Script/language sensitivity: </i>Applies only to scripts with vertical 
        writing capability.</p>
       <p><i>Feature interaction: </i>Overrides the <a href="#vert">vert</a> (Vertical 
        Writing) feature, which is a subset of this one. May be used in addition to any 
        other feature.</p>
       <p><br>
        <a name="zero"></a><b>Tag: </b>'zero'</p>
       <p><i>Friendly name: </i>Slashed Zero</p>
       <p><i>Registered by: </i>Adobe
       </p>
       <p><i>Function: </i>Some fonts contain both a default form of zero, and an 
        alternative form which uses a diagonal slash through the counter. Especially in 
        condensed designs, it can be difficult to distinguish between 0 and O (zero and 
        capital O) in any situation where capitals and lining figures may be 
        arbitrarily mixed. This feature allows the user to change from the default 0 to 
        a slashed form.</p>
       <p><i>Example: </i>When setting labels, the user applies this feature to get the 
        slashed 0.</p>
       <p><i>Recommended implementation: </i>The zero table maps the GIDs for the 
        lining forms of zero to corresponding slashed forms (GSUB lookup type 1).</p>
       <p><i>Application interface: </i>For GIDs in the zero coverage table, the 
        application passes a GID to the zero table and gets back a new GID.</p>
       <p><i>UI suggestion: </i>Optimally, the application would store this as a 
        preference setting, and the user could use the feature to toggle back and forth 
        between the two forms. Most applications will want the default setting to 
        disable this feature.</p>
       <p><i>Script/language sensitivity: </i>Does not apply to scripts which use forms 
        other than 0 for zero.</p>
       <p><i>Feature interaction: </i>Applies only to lining figures, so is inactivated 
        by oldstyle figure features (e.g. <a href="features_ko.htm#onum">onum</a>).</p>
       <p>&nbsp;</p>



<P>
<FONT FACE="Verdana, Arial, Helvetica" SIZE=1 CLASS=detail>
<P CLASS=detail><BR><BR>
this page was last updated 14 October 2002<BR>
&copy; 2002 Microsoft Corporation. All rights reserved. <A HREF="/info/cpyright.htm">Terms of use</A>.<BR>
comments to the MST group: 
<A HREF="/typography/about.htm">how to contact us</A> 
<P>&nbsp;
</FONT>


</TD>
<TD WIDTH=20></TD>
</TR>

<TR>
<TD WIDTH=20></TD>
<TD COLSPAN=2 WIDTH=540></TD>
<TD WIDTH=20></TD>
</TR>

<TR>
<TD COLSPAN=4 WIDTH=580 HEIGHT=5><IMG SRC="toprule.gif" WIDTH=580 HEIGHT=5 ALT=""></TD>
</TR>

<TR>
<TD WIDTH=20></TD>
<TD WIDTH=560 COLSPAN=3 VALIGN=TOP><FONT FACE="Verdana, Arial, Helvetica" SIZE=1 CLASS=detail>
	<A HREF="/typography/default.asp">Microsoft Typography</A>
	 | <A HREF="/typography/creators.htm">Developer information</A>
         | <A HREF="/typography/default.htm">Specifications</A>
	 | <A HREF="ttoreg.htm">OpenType Layout tag registry</A>
</FONT></TD>
</TR>

<TR>
<TD COLSPAN=4 WIDTH=580 HEIGHT=20><IMG SRC="baserule.gif" WIDTH=580 HEIGHT=20></TD>
</TR>
</TABLE>

</CENTER>
</BODY>
</HTML>
